#vim:filetype=i3

# variables
# we use variables to avoid repeating the names in multiple places.
set $mod Mod4
set $term i3-sensible-terminal

set $bg-color            #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935
set $indicator           #00ff00
set $separator           #757575

set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6:"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10:"

# set i3 font
font pango:System San Francisco Display 9

# open a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+shift+q kill

# start dmenu (a program launcher)
bindsym $mod+space exec dmenu_run -l 20 -nb "$bg-color" -nf "$text-color"

# split in horizontal orientation
bindsym $mod+x split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# reload the configuration file
bindsym $mod+shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# screenshot selecting area
bindsym --release $mod+p exec scrot -s -p -c -d 1 \
  /tmp/screenshot_$(date +%F_%T).png \
  -e 'xclip -selection clipboard -t "image/png" < $f && notify-send "$n copied"'

# screenshot full screen
bindsym --release $mod+shift+p exec scrot -u -p \
  /tmp/screenshot_$(date +%F_%T).png \
  -e 'xclip -selection clipboard -t "image/png" < $f && notify-send "$n copied"'

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# toggle tiling / floating
bindsym $mod+t floating toggle

bindsym $mod+h            focus left
bindsym $mod+shift+h      move left
bindsym $mod+Ctrl+h       move workspace to output left

bindsym $mod+j            focus down
bindsym $mod+shift+j      move down

bindsym $mod+k            focus up
bindsym $mod+shift+k      move up

bindsym $mod+l            focus right
bindsym $mod+shift+l      move right
bindsym $mod+Ctrl+l       move workspace to output right

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# open workspace by monitor
workspace $ws1 output HDMI-1 eDP-1
workspace $ws2 output HDMI-1 eDP-1
workspace $ws3 output HDMI-1 eDP-1
workspace $ws4 output eDP-1
workspace $ws5 output eDP-1
workspace $ws6 output eDP-1

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+shift+1 move container to workspace $ws1
bindsym $mod+shift+2 move container to workspace $ws2
bindsym $mod+shift+3 move container to workspace $ws3
bindsym $mod+shift+4 move container to workspace $ws4
bindsym $mod+shift+5 move container to workspace $ws5
bindsym $mod+shift+6 move container to workspace $ws6
bindsym $mod+shift+7 move container to workspace $ws7
bindsym $mod+shift+8 move container to workspace $ws8
bindsym $mod+shift+9 move container to workspace $ws9
bindsym $mod+shift+0 move container to workspace $ws10

# open a container in specific workspace
for_window [class="Google-chrome"] move container to workspace $ws2
for_window [class="Firefox"]       move container to workspace $ws3
for_window [class="Slack"]         move container to workspace $ws4
for_window [class="discod"]        move container to workspace $ws5
for_window [class="Spotify"]       move container to workspace $ws6

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode
  bindsym l resize shrink width 10 px or 10 ppt
  bindsym h resize grow width 10 px or 10 ppt
  bindsym k resize grow height 10 px or 10 ppt
  bindsym j resize shrink height 10 px or 10 ppt

  # back to normal: Enter or Escape or $mod+r
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

# window colors
#                        border              background          text                  indicator
client.focused           $bg-color           $bg-color           $text-color           $indicator
client.unfocused         $inactive-bg-color  $inactive-bg-color  $inactive-text-color  $indicator
client.focused_inactive  $inactive-bg-color  $inactive-bg-color  $inactive-text-color  $indicator
client.urgent            $urgent-bg-color    $urgent-bg-color    $text-color           $indicator

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  status_command i3status
  position top
  colors {
    background $bg-color
    separator  $separator
    #                   border              background          text
    focused_workspace   $bg-color           $bg-color           $text-color
    inactive_workspace  $inactive-bg-color  $inactive-bg-color  $inactive-text-color
    urgent_workspace    $urgent-bg-color    $urgent-bg-color    $text-color
  }
}

# set my wallpaper
exec feh --bg-scale ~/Pictures/wallpaper.jpg

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# show the lockscreen
bindsym $mod+shift+x exec i3lock --color "$bg-color"

# Set external monitor position with arandr
exec xrandr --output eDP-1 --mode 1366x768 --pos 1920x0 --rotate normal --output HDMI-1 --primary --mode 1920x1080 --pos 0x0 --rotate normal

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

